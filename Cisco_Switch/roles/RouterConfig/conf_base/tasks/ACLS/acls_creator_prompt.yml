                                                            #      #####    #       #####
                                                           # #     #        #       #
                                                          #   #    #        #       ##### 
                                                          #####    #        #           # 
                                                          #   #    #####    ####    #####


#------------------------------------------#ACLS#------------------------------------------#
#####ACLS_NAME#####
  - name: ðŸš¦ ACLS | QUESTION - Name
    pause:
      prompt: "[???] What name do you want to set ?"
    register: ACLS_NAME
#####ACLS_NAME#####

#####ACLS-STATE#####
  - name: ðŸš¦ ACLS | QUESTION - State
    pause:
      prompt: "[???] Which STATE you want your ACLs to be ? [merged/replaced/overriden/deleted/rendered]"
    register: ACLS_STATE
#####ACLS-STATE#####

#####ACLS-AFI#####
  - name: ðŸš¦ ACLS | QUESTION - AFI Type
    pause:
      prompt: "[???] Which type of AFI you want your ACLs to be ? [ipv4/ipv6]"
    register: ACLS_AFI
#####ACLS-AFI#####

#####ACLS-GRANT#####
  - name: ðŸš¦ ACLS | QUESTION - Grant
    pause:
      prompt: "[???] Which type of GRANT you want your ACLs to be ? [permit/deny]"
    register: ACLS_GRANT
#####ACLS-GRANT#####

#####ACLS-SOURCE#####
  - name: ðŸš¦ ACLS | QUESTION - Source IP
    pause:
      prompt: "[???] SOURCE IP ? "
    register: ACLS_SOURCE_IP

  - name: ðŸš¦ ACLS | QUESTION - Source Wild
    pause:
      prompt: "[???] SOURCE Wildcard_bits ? "
    register: ACLS_SOURCE_WILD
#####ACLS-SOURCE#####
#####ACLS-DESTINATION#####
  - name: ðŸš¦ ACLS | QUESTION - Destination IP
    pause:
      prompt: "[???] DESTINATION IP ? "
    register: ACLS_DEST_IP

  - name: ðŸš¦ ACLS | QUESTION - Destination Wild
    pause:
      prompt: "[???] DESTINATION Wildcard_bits ? "
    register: ACLS_DEST_WILD
#####ACLS-DESTINATION#####

#####ACLS-PORT-PROTOCOL#####
  - name: ðŸš¦ ACLS | QUESTION - Port Protocol
    pause:
      prompt: "[???] Port protocol ?  [eq/gt/lt/neq/range]"
    register: ACLS_PORT_PROTOCOL
#####ACLS-PORT-PROTOCOL#####

#####ACLS-PORT-PROTOCOL-eq#####
  - include_tasks: ./ACLS_PORT_PROTOCOL_DATA/acls_port_protocol_data_eq.yml
    when: ACLS_PORT_PROTOCOL.user_input == "eq"
#####ACLS-PORT-PROTOCOL-eq#####

#####ACLS-PORT-PROTOCOL-gt#####
  - include_tasks: ./ACLS_PORT_PROTOCOL_DATA/acls_port_protocol_data_gt.yml
    when: ACLS_PORT_PROTOCOL.user_input == "gt"
#####ACLS-PORT-PROTOCOL-gt#####

#####ACLS-PORT-PROTOCOL-lt#####
  - include_tasks: ./ACLS_PORT_PROTOCOL_DATA/acls_port_protocol_data_lt.yml
    when: ACLS_PORT_PROTOCOL.user_input == "lt"
#####ACLS-PORT-PROTOCOL-lt#####

#####ACLS-PORT-PROTOCOL-neq#####
  - include_tasks: ./ACLS_PORT_PROTOCOL_DATA/acls_port_protocol_data_neq.yml
    when: ACLS_PORT_PROTOCOL.user_input == "neq"
#####ACLS-PORT-PROTOCOL-neq#####

#####ACLS-PORT-PROTOCOL-range#####
#  - include_tasks: ./ACLS_PORT_PROTOCOL_DATA/acls_port_protocol_data_range.yml
#    when: ACLS_PORT_PROTOCOL.user_input == "range"
#####ACLS-PORT-PROTOCOL-range#####

#####ACLS-DSCP#####
  - name: ðŸš¦ ACLS | QUESTION - DSCP
    pause:
      prompt: "[???] dscp var ? "
    register: ACLS_DSCP
#####ACLS-DSCP#####

#####ACLS-TTL#####
  - name: ðŸš¦ ACLS | QUESTION - ttl
    pause:
      prompt: "[???] Which type of TTL you want your ACLs to be ? [eq/gt/lt/neq/range]"
    register: ACLS_TTL
#####ACLS-TTL#####

#####ACLS-TTL-eq#####
  - include_tasks: ./ACLS_TLL_DATA/acls_tll_data_eq.yml
    when: ACLS_TTL.user_input == "eq"
#####ACLS-TTL-eq#####

#####ACLS-TTL-gt#####
  - include_tasks: ./ACLS_TLL_DATA/acls_tll_data_gt.yml
    when: ACLS_TTL.user_input == "gt"
#####ACLS-TTL-gt#####

#####ACLS-TTL-lt#####
  - include_tasks: ./ACLS_TLL_DATA/acls_tll_data_lt.yml
    when: ACLS_TTL.user_input == "lt"
#####ACLS-TTL-lt#####

#####ACLS-TTL-neq#####
  - include_tasks: ./ACLS_TLL_DATA/acls_tll_data_neq.yml
    when: ACLS_TTL.user_input == "neq"
#####ACLS-TTL-neq#####

#####ACLS-TTL-range#####
#  - include_tasks: ./ACLS_TLL_DATA/acls_tll_data_range.yml
#    when: ACLS_TTL.user_input == "range"
#####ACLS-TTL-range#####
#------------------------------------------#ACLS#------------------------------------------#

#------------------------------------------#VALIDATION------------------------------------------#
  - name: ðŸš¦ ACLS | VALIDATION
    pause:
      prompt: "[???] Do you want to check your vars ? (yes/no)"
    register: ACLS_DEBUG_CHECK

  - include_tasks: acls_debug_var.yml
    when: ACLS_DEBUG_CHECK.user_input | bool
#------------------------------------------#VALIDATION------------------------------------------#

#------------------------------------------#ACLS#------------------------------------------#
#####APPLY-CONFIGURATION#####
  - name: ðŸš¦ ACLS | Apply the new ACLs configuration
    cisco.ios.ios_acls:
      config:
        - afi: "{{ ACLS_AFI.user_input }}"
          acls:
            - name: "{{ ACLS_NAME.user_input }}"
              aces:
                - grant: "{{ ACLS_GRANT.user_input }}"
                  protocol_options:
                    tcp:
                      syn: true
                  source:
                    address: "{{ ACLS_SOURCE_IP.user_input }}"
                    wildcard_bits: "{{ ACLS_SOURCE_WILD.user_input }}"
                  destination:
                    address: "{{ ACLS_DEST_IP.user_input }}"
                    wildcard_bits: "{{ ACLS_DEST_WILD.user_input }}"
                    port_protocol:
                      eq: "{{ ACLS_PORT_PROTOCOL_DATA.user_input }}"
                      #"{{ ACLS_PORT_PROTOCOL.user_input }}": "{{ ACLS_PORT_PROTOCOL_DATA.user_input }}"
                  dscp: "{{ ACLS_DSCP.user_input }}"
                  ttl:
                    eq: "{{ ACLS_TTL_DATA.user_input }}"
                    #"{{ ACLS_TTL.user_input }}": "{{ ACLS_TTL_DATA.user_input }}"
#            - name: 150
#              aces:
#                - grant: deny
#                  sequence: 20
#                  protocol_options:
#                    tcp:
#                      syn: true
#                  source:
#                    address: 198.51.100.0
#                    wildcard_bits: 0.0.0.255
#                    port_protocol:
#                      eq: telnet
#                  destination:
#                    address: 198.51.110.0
#                    wildcard_bits: 0.0.0.255
#                    port_protocol:
#                      eq: telnet
#                  dscp: ef
#                  ttl:
#                    eq: 10
      state: "{{ ACLS_STATE.user_input }}"
#####APPLY-CONFIGURATION#####
#------------------------------------------#ACLS#------------------------------------------#
